#include<stdio.h>
#include<stdlib.h>

typedef struct Node {
    int data;
    struct Node* next;
    
} Node;

typedef struct Queue {
    Node* front;
    Node* rear;
} Queue;

void initQueue(Queue* q) {
    q->front = NULL;
    q->rear = NULL;
}
void enqueue(Queue* q, int value) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    newNode->data = value;
    newNode->next = NULL;
    
    if(q->rear == NULL) {
        q->front = q->rear = newNode;
    } else {
        q->rear->next = newNode;
        q->rear = newNode;
    }
}
void dequeue(Queue* q) {
    if(q->front == NULL) {
        return;
    }
    Node* temp = q->front;
    q->front = q->front->next;
    if(q->front == NULL) {
        q->rear = NULL;
    }
    free(temp);
}
void printFront(Queue* q) {
    if(q->front != NULL) {
        printf("%d\n", q->front->data);
    } else {
        printf("Queue is empty\n");
    }
}
void freeQueue(Queue* q) {
    while(q->front != NULL) {
        dequeue(q);
    }
}
int main() {
    Queue queue;
    initQueue(&queue);
    int n;
    scanf("%d", &n);
    for(int i=0;i<n;i++) {
        int op;
        scanf("%d", &op);
        if(op == 1) {
            int value;
            scanf("%d", &value);
            enqueue(&queue, value);
        } else if(op == 2) {
            dequeue(&queue);
        } else if(op == 3) {
            printFront(&queue);
        }
    }
    freeQueue(&queue);
    return 0;
}
